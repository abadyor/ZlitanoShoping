@page "/add-Customer"
@inject HttpClient Http
@using System.Net.Http.Json
@using System.ComponentModel.DataAnnotations
@using APPL.Services
@inject NavigationManager Navigation
@using System.Text.Json
 @inject IJSRuntime JS
 @inject ApiService ApiService
<h3 class="text-center mt-4">Add New Vendor</h3>

<div class="container mt-5">
    <div class="card shadow-sm">
        <div class="card-body">
            <form @onsubmit="HandleSubmit">
                <div class="row g-3">

                    <div class="col-md-6">
                        <label for="GivenNames" class="form-label">Given Names</label>
                        <input type="text" id="GivenNames" class="form-control" @bind="Model.GivenNames" required />
                    </div>

                    <div class="col-md-6">
                        <label for="Nickname" class="form-label">Nickname</label>
                        <input type="text" id="Nickname" class="form-control" @bind="Model.Nickname" />
                    </div>

                    <div class="col-md-6">
                        <label for="Gender" class="form-label">Gender</label>
                        <select id="Gender" class="form-select" @bind="Model.Gender">
                            <option value="">Select Gender</option>
                            <option value="M">Male</option>
                            <option value="F">Female</option>
                        </select>
                    </div>

                    <div class="col-md-6">
                        <label for="DocId" class="form-label">Document ID</label>
                        <input type="text" id="DocId" class="form-control" @bind="Model.DocId" />
                    </div>

                    <div class="col-md-6">
                        <label for="DocType" class="form-label">Document Type</label>
                        <input type="text" id="DocType" class="form-control" @bind="Model.DocType" />
                    </div>

                    <div class="col-md-6">
                        <label for="EmailAddress" class="form-label">Email Address</label>
                        <input type="email" id="EmailAddress" class="form-control" @bind="Model.EmailAddress" required />
                    </div>

                    <div class="col-md-6">
                        <label for="Mobile" class="form-label">Mobile</label>
                        <input type="tel" id="Mobile" class="form-control" @bind="Model.Mobile" />
                    </div>



                    <div class="col-md-6">
                        <label for="Username" class="form-label">Username</label>
                        <input type="text" id="Username" class="form-control" @bind="Model.Username" required />
                    </div>

                    <div class="col-md-6">
                        <label for="Password" class="form-label">Password</label>
                        <input type="password" id="Password" class="form-control" @bind="Model.Password" required minlength="6" />
                    </div>
                </div>

                <div class="d-flex justify-content-center mt-4">
                    <button type="submit" class="btn btn-primary px-4">Add Customer</button>
                </div>
            </form>
        </div>
    </div>
</div>

@code {

    private CustomerAddServiceDTO Model { get; set; } = new();

    private string _apiBaseUrl="";
    protected override async Task OnInitializedAsync()
    {
        _apiBaseUrl = ApiService.GetApiBaseUrl();
    }
    private async Task HandleSubmit()
    {
        try
        {
            var response = await Http.PostAsJsonAsync($"{_apiBaseUrl}api/Customer/Create", Model);
            if (response.IsSuccessStatusCode)
            {
                var result = await JS.InvokeAsync<bool>("confirm", "Vendor added successfully! Click OK to continue.");

                if (result) // إذا ضغط على OK
                {
                    await JS.InvokeVoidAsync("sessionStorage.setItem", "username", Model.Username);
                    await JS.InvokeVoidAsync("sessionStorage.setItem", "password", Model.Password);
                    await JS.InvokeVoidAsync("sessionStorage.setItem", "namepage", "Customer");
                    Navigation.NavigateTo("/Register"); // استبدل `/next-page` بالمسار المطلوب
                }
            }
            else
            {
                await JS.InvokeVoidAsync("alert", "Failed to add vendor. Please try again.");
            }
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", $"Error: {ex.Message}");
        }
    }
}
